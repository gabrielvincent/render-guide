# To really understand GraphQL, go to http://graphql.org/guide/

type Book {
  id: ID!
  cacheId: ID!
  name: String
  authors: [String!]
}

# It is necessary to generate input types for creating books
# ref: http://graphql.org/graphql-js/mutations-and-input-types/
input BookInput {
  name: String
  authors: [String!]
}

type Query {
  # Cache control can only be set at root fields
  books(from: Int = 0, to: Int = 4): [Book] @cacheControl(scope: PUBLIC, maxAge: SHORT)
  book(id: ID!): Book
  total: Int

  """
  Returns a markdown source given an id
  """
  source(id: ID!): String
}

type Mutation {
  # You should always return the whole object in a mutation, not only a boolean. This will help in browser caching
  editBook(id: ID!, book: BookInput!): Book
  newBook(book: BookInput!): Book
  delete(id: String): Boolean
}
