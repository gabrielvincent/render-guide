# To really understand GraphQL, go to http://graphql.org/learn/

# Cache control can be set at each field
# ref: https://www.apollographql.com/docs/engine/caching.html
type Book {
  id: ID!
  name: String
  authors: [String!]
}

type PageInfo {
  cursor: Int!
  hasNextPage: Boolean!
}

type BookListwithPageInfo {
  content: [Book!]
  pageinfo: PageInfo
}

# It is necessary to generate input types for creating books
# ref: http://graphql.org/graphql-js/mutations-and-input-types/
input BookInput {
  name: String
  authors: [String!]
}

type Query {
  books(cursor: Int, numberOfEntries: Int): BookListwithPageInfo @cacheControl(scope: PUBLIC, maxAge: SHORT)
  book(id: ID!): Book
}

type Mutation {
  deleteBook(id: ID!): ID
  createBook(data: BookInput): Book
}
